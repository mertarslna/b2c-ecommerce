version: '3.8'

services:
  # PostgreSQL Database (Development)
  postgres:
    image: postgres:15-alpine
    container_name: ecommerce_postgres_dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: ecommerce_db_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres_dev_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5433:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - ecommerce_dev_network

  # Redis Cache (Development)
  redis:
    image: redis:7-alpine
    container_name: ecommerce_redis_dev
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis_dev_data:/data
    command: redis-server --appendonly yes
    networks:
      - ecommerce_dev_network

  # pgAdmin (Development)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: ecommerce_pgadmin_dev
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: dev@ecommerce.com
      PGADMIN_DEFAULT_PASSWORD: dev_password
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8082:80"
    volumes:
      - pgadmin_dev_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - ecommerce_dev_network

  # Redis Commander (Development)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: ecommerce_redis_commander_dev
    restart: unless-stopped
    environment:
      REDIS_HOSTS: redis:redis:6379
    ports:
      - "8083:8081"
    depends_on:
      - redis
    networks:
      - ecommerce_dev_network

  # Mailhog (Email testing in development)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: ecommerce_mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP server
      - "8025:8025"  # Web interface
    networks:
      - ecommerce_dev_network

volumes:
  postgres_dev_data:
  redis_dev_data:
  pgadmin_dev_data:

networks:
  ecommerce_dev_network:
    driver: bridge